{"version":3,"file":"angular2-presta.mjs","sources":["../../../projects/angular2-presta/src/lib/angular2-presta.image.size.ts","../../../projects/angular2-presta/src/lib/angular2-presta.service.ts","../../../projects/angular2-presta/src/lib/angular2-presta-image.component.ts","../../../projects/angular2-presta/src/lib/angular2-presta.module.ts","../../../projects/angular2-presta/src/public_api.ts","../../../projects/angular2-presta/src/angular2-presta.ts"],"sourcesContent":["export enum Angular2PrestaImageSize {\n  cart = 'cart_default',\n  small = 'small_default',\n  medium = 'medium_default',\n  large = 'large_default',\n  thickbox = 'thickbox_default',\n  home = 'home_default',\n  category = 'category_default'\n}\n","import { Injectable, Inject } from \"@angular/core\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\n// Import presta configuration\nimport { Angular2PrestaConfiguration } from \"./angular2-presta.configuration\";\nimport { Angular2PrestaQuery } from \"./angular2-presta.query\";\nimport { Angular2PrestaImageSize } from \"./angular2-presta.image.size\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class Angular2PrestaService {\n  TAG = \"Angular2Presta: \";\n\n  constructor(\n    @Inject(\"prestaConfiguration\") private config: Angular2PrestaConfiguration,\n    private http: HttpClient\n  ) {}\n\n  /*\n   * [requestConstructor : analyze Query object, construct and return request url]\n   * @param  {PrestaQuery}  q [Query object]\n   * @return {[string]}   [request url]\n   */\n  requestConstructor(q: Angular2PrestaQuery): string {\n    // check if params are set, if not set default values\n    if (!q.resource) {\n      q.resource = \"products\";\n    }\n\n    // Check if display is set if not return results with all properties\n    !q.display\n      ? (q.display = `&display=full`)\n      : (q.display = `&display=[${q.display}]`);\n\n    // Generate filter query from Query.filter object if it is defined\n    let filterQuery = \"\";\n\n    if (q.filter) {\n      for (const property in q.filter) {\n        if (property) {\n          filterQuery += `&filter[${property}]=[${q.filter[property]}]`;\n        }\n      }\n    }\n\n    !q.sort ? (q.sort = \"\") : (q.sort = `&sort=[${q.sort}]`);\n    !q.limit ? (q.limit = \"\") : (q.limit = `&limit=${q.limit}`);\n\n    if (!q.search) {\n      return (\n        this.config.shopUrl +\n        q.resource +\n        \"?ws_key=\" +\n        this.config.apiKey +\n        \"&output_format=JSON\" +\n        q.display +\n        filterQuery +\n        q.sort +\n        q.limit\n      );\n    } else {\n      return (\n        this.config.shopUrl +\n        \"search\" +\n        \"?ws_key=\" +\n        this.config.apiKey +\n        \"&output_format=JSON&language=1\" +\n        q.display +\n        filterQuery +\n        \"&query=\" +\n        q.search\n      );\n    }\n  }\n\n  fetchForm(resource: string): Observable<any> {\n    return this.http.get(\n      `${this.config.shopUrl}${resource}?schema=blank&ws_key=${this.config.apiKey}`,\n      { responseType: \"text\" }\n    );\n  }\n\n  /*\n   * [get results from presta shop web service]\n   * @param  {PrestaQuery}           q [query object]\n   * @return {Observable<any>}   [results object array]\n   */\n  get(q: Angular2PrestaQuery): Observable<any> {\n    return this.http.get(this.requestConstructor(q)).pipe(\n      map((resp) => resp[q.resource]),\n      catchError(this.handleError)\n    );\n  }\n\n  delete(resource: string, resourceId: number): Observable<any> {\n    return this.http.delete(\n      `${this.config.shopUrl}${resource}/${resourceId}?ws_key=${this.config.apiKey}`\n    );\n  }\n\n  /*\n   * [search]\n   * @param  {PrestaQuery}           q [query object with search term provided]\n   * @return {Observable<Response>}   [return results object array]\n   */\n  search(q: Angular2PrestaQuery): Observable<any> {\n    return this.http.get(this.requestConstructor(q)).pipe(\n      map((resp) => resp[q.resource]),\n      catchError(this.handleError)\n    );\n  }\n\n  /*\n   * [getImage used by PrestaImage component to get images from Presta Shop Web Service]\n   * @param  {string} resource   [general, products, categories, manufacturers, suppliers, stores]\n   * @param  {number} resourceID [ID of resurce to get images for]\n   * @param  {number} imageID    [ID of image to get]\n   * @param  {string} imageSize  [cart, small, medium, large, thickbox, home, category]\n   * @return {string}            [url]\n   */\n  getImage(\n    resource: string,\n    resourceID: number,\n    imageID?: number,\n    imageSize?: string\n  ): string {\n    // check if imageApiKey is defined if not use default apiKey (not recomended for security reasons)\n    let key = \"\";\n    !this.config.imageApiKey\n      ? (key = this.config.apiKey)\n      : (key = this.config.imageApiKey);\n\n    // check if image size is defined if not get large images by default\n    if (!imageSize) {\n      imageSize = Angular2PrestaImageSize.large;\n    }\n\n    if (resource === \"products\") {\n      return (\n        this.config.shopUrl +\n        \"images/\" +\n        resource +\n        \"/\" +\n        resourceID +\n        \"/\" +\n        imageID +\n        \"/\" +\n        Angular2PrestaImageSize[imageSize] +\n        \"?ws_key=\" +\n        key\n      );\n    } else {\n      return (\n        this.config.shopUrl +\n        \"images/\" +\n        resource +\n        \"/\" +\n        resourceID +\n        \"?ws_key=\" +\n        key\n      );\n    }\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error(this.TAG + \"An error occurred:\", error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `${this.TAG} Backend returned code ${error.status}, ` +\n          `body was: ${error.error}`\n      );\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      `${this.TAG} Something bad happened; please try again later.`\n    );\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Angular2PrestaService } from './angular2-presta.service';\n\n@Component({\n  selector: 'a2p-image',\n  template: `<img class=\"presta-image\" [src]=\"image\" />`,\n  styles: []\n})\nexport class Angular2PrestaImageComponent implements OnInit {\n\n  @Input() resource: string;\n  @Input() resourceID: number;\n  @Input() imageID?: number;\n  @Input() size?: string;\n\n  image: string;\n\n  constructor(private _a2ps: Angular2PrestaService) { }\n\n  ngOnInit() {\n    this.image = this._a2ps.getImage(this.resource, this.resourceID, this.imageID, this.size);\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { Angular2PrestaConfiguration } from \"./angular2-presta.configuration\";\nimport { Angular2PrestaImageComponent } from \"./angular2-presta-image.component\";\nimport { Angular2PrestaService } from \"./angular2-presta.service\";\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [Angular2PrestaImageComponent],\n  exports: [Angular2PrestaImageComponent],\n})\nexport class Angular2PrestaModule {\n  static forRoot(\n    prestaConfiguration: Angular2PrestaConfiguration\n  ): ModuleWithProviders<Angular2PrestaModule> {\n    return {\n      ngModule: Angular2PrestaModule,\n      providers: [\n        Angular2PrestaService,\n        { provide: \"prestaConfiguration\", useValue: prestaConfiguration },\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of angular2-presta\n */\n\nexport * from './lib/angular2-presta.service';\nexport * from './lib/angular2-presta.module';\nexport * from './lib/angular2-presta.configuration';\nexport * from './lib/angular2-presta.query';\nexport * from './lib/angular2-presta.image.size';\nexport * from './lib/angular2-presta-image.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.Angular2PrestaService"],"mappings":"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"}